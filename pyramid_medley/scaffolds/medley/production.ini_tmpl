###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]
use = egg:{{project}}

# this is example: better to use ENV setting {{project.upper()}}_SECRET
# {{project}}.secret = {{random_string}}

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_tm
    pyramid_jinja2
    pyramid_mailer
    pyramid_storage
    pyramid_webassets
    pyramid_exclog

# requires psycopg2
# # this is example: better to use ENV setting {{project.upper()}}_SQLALCHEMY_URL
#sqlalchemy.url = postgresql://postgres:mypassword@localhost/{{project}}

# Assets

webassets.base_dir=%(here)s/{{project}}/static
webassets.base_url=/static
webassets.debug=False
webassets.updater=timestamp
webassets.cache=True
webassets.url_expire=True
webassets.static_view=True
webassets.cache_max_age=3600


# Cache

# requires python-memcached
cache.backend = dogpile.cache.memcached
cache.expires = 3600
cache.url = 127.0.0.1:11211


# File storage
storage.base_path = %(here)s/{{project}}/static/uploads
storage.base_url = /static/uploads/


#  SMTP
mail.host = localhost
mail.port = 25

[pshell]
models = {{project}}.models
session = {{project}}.models.DBSession
transaction = transaction
#setup = {{project}}.pshell

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

[alembic]
# path to migration scripts; we use a package resource specification here
script_location = {{project}}:alembic

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, {{project}}, sqlalchemy

[handlers]
keys = console, exc_handler

[formatters]
keys = generic, exc_formatter

[logger_root]
level = WARN
handlers = console

[logger_{{project}}]
level = WARN
handlers =
qualname = {{project}}

[logger_exc_logger]
level = ERROR
handlers = exc_handler
qualname = exc_logger

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_exc_handler]
class = handlers.SMTPHandler
args = (('localhost', 25), 'from@{{project}}.com', ['to@{{project}}.com'], '{{project}} Exception')
level = ERROR
formatter = exc_formatter

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

[formatter_exc_formatter]
format = %(asctime)s %(message)s
