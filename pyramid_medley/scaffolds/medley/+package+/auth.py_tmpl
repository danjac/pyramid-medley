from pyramid.security import (
    Everyone,
    Authenticated,
)

from pyramid.authentication import AuthTktAuthenticationPolicy
from pyramid.authorization import ACLAuthorizationPolicy

from .models import User
from .security import Staff
from .resources import Root


def includeme(config):

    authn_policy = AuthenticationPolicy(
        config.registry.settings['{{project}}.secret'],
        hashalg='sha512'
    )
    config.set_authentication_policy(authn_policy)
    config.set_authorization_policy(ACLAuthorizationPolicy())

    config.add_request_method(get_user, 'user', reify=True)

    config.set_root_factory(Root)
    config.set_default_permission('view')


def get_user(request):

    user_id = request.unauthenticated_userid
    if user_id:
        return User.query.active().filter(User.id == user_id).first()


class AuthenticationPolicy(AuthTktAuthenticationPolicy):

    def effective_principals(self, request):
        rv = [Everyone]
        if request.user:
            rv.append(Authenticated)
            rv.append("user:%d" % request.user.id)
            if request.user.is_admin:
                rv.append(Staff)
        return rv
