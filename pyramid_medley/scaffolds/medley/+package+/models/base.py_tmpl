import datetime

from sqlalchemy import (
    Column,
    Integer,
    DateTime,
)

from sqlalchemy.orm import (
    scoped_session,
    sessionmaker,
    Query,
)

from sqlalchemy.ext.declarative import declarative_base, declared_attr

from zope.sqlalchemy import ZopeTransactionExtension

from webhelpers import paginate


DBSession = scoped_session(sessionmaker(extension=ZopeTransactionExtension()))


class BaseQuery(Query):

    def paginate(self, request, **kwargs):
        try:
            page_number = int(request.params['page'])
        except (TypeError, KeyError, ValueError):
            page_number = 1
        page_url = paginate.PageURL_WebOb(request)
        return paginate.Page(self, page_number, url=page_url, **kwargs)


class BaseModel(object):

    query = DBSession.query_property(BaseQuery)

    @declared_attr
    def id(self):
        return Column(Integer, primary_key=True)

    @declared_attr
    def created_at(self):
        return Column(DateTime, default=datetime.datetime.now)

    @declared_attr
    def updated_at(self):
        return Column(DateTime, onupdate=datetime.datetime.now)


Base = declarative_base(cls=BaseModel)
