import os

from pyramid.config import Configurator
from pyramid.session import SignedCookieSessionFactory

from sqlalchemy import engine_from_config

from .models import DBSession, Base

ENV_SETTINGS = {
    '{{project.upper()}}_SQLALCHEMY_URL': 'sqlalchemy.url',
    '{{project.upper()}}_SECRET': '{{project}}.secret',
}


def get_environ_settings():
    return dict((v, os.environ[k]) for k, v in ENV_SETTINGS.iteritems()
                if k in os.environ)


def main(global_config, **settings):
    """ This function returns a Pyramid WSGI application.
    """
    settings.update(get_environ_settings())
    engine = engine_from_config(settings, 'sqlalchemy.')
    DBSession.configure(bind=engine)
    Base.metadata.bind = engine
    config = Configurator(settings=settings)
    
    session_factory = SignedCookieSessionFactory(
        settings['{{project}}.secret']
    )

    config.set_session_factory(session_factory)

    config.include('.auth')
    config.include('.routes')
    config.include('.renderers')
    config.include('.mail')
    config.include('.caching')
    config.include('.assets')

    config.scan()
    return config.make_wsgi_app()
